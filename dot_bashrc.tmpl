# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

HISTCONTROL=ignoreboth
HISTSIZE=10000
HISTFILESIZE=20000
shopt -s histappend
shopt -s checkwinsize
# shopt -s globstar
export PAGER="bat --plain"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MICRO_TRUECOLOR=1
export WINIT_X11_SCALE_FACTOR=1
export npm_config_prefix="$HOME/.local"

{{ if eq .osid "android" }}
export USER=haroldo

if ! pgrep -f "crond" >/dev/null; then
  crond
fi

if ! pgrep -f "sshd" >/dev/null; then
  sshd
fi
{{ else }}
[ -f "/usr/share/xdg-desktop-portal/portals/kde.portal" ] && export GTK_USE_PORTAL=1
{{ end }}

case $TERM in
linux)
  if command -v yaft &>/dev/null; then
    export FRAMEBUFFER=/dev/fb0
    export YAFT=wall
    yaft
  fi
  ;;
esac

## Export variable need for qt-theme
if command -v qtile &>/dev/null; then
  export QT_QPA_PLATFORMTHEME=qt5ct
fi

## Environment setup
if [ -f ~/.aliases ]; then
  . ~/.aliases
fi

# set PATH so it includes user's private bin if it exists
if [ -d "${HOME}/bin" ] && [[ ":$PATH:" != *":${HOME}/bin:"* ]]; then
  PATH="${PATH:+"$PATH:"}${HOME}/bin"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "${HOME}/.local/bin" ] && [[ ":$PATH:" != *":${HOME}/.local/bin:"* ]]; then
  PATH="${PATH:+"$PATH:"}${HOME}/.local/bin"
fi

# set PATH so it includes texlive bin if it exists
if [ -d "/usr/local/texlive/bin/x86_64-linux" ] && [[ ":$PATH:" != *":/usr/local/texlive/bin/x86_64-linux:"* ]]; then
  PATH="${PATH:+"$PATH:"}/usr/local/texlive/bin/x86_64-linux"
fi

# fzf
[ -f "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash ] && source "${XDG_CONFIG_HOME:-$HOME/.config}"/fzf/fzf.bash

# Advanced command-not-found hook
if [ -f /usr/share/doc/find-the-command/ftc.bash ]; then
  source /usr/share/doc/find-the-command/ftc.bash
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# use bat to color --help messages
h() {
  "$@" --help 2>&1 | bat --plain --language=help
}

# alias substitution for sudo
alias sudo="sudo "

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    source /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
  fi
fi

{{ template "shell/colors.sh" . }}

{{ if .isWSL }}
if service --status-all 2>/dev/null | grep "docker" | grep "-" &>/dev/null; then
  sudo service docker start &>/dev/null
fi
{{ end }}

command -v nvim >/dev/null && export EDITOR=nvim || export EDITOR=vim

if [ -f "${HOME}/.config/.env" ]; then
  source "${HOME}/.config/.env"
fi

{{ if ne .osid "android" }}
## Mcfly history
if command -v mcfly &>/dev/null; then
  eval "$(mcfly init bash)"
fi
{{ end }}

## Starship prompt
if command -v starship &>/dev/null; then
  eval "$(starship init bash)"
fi

export PATH
