## Set values
# Hide welcome message
set fish_greeting
set VIRTUAL_ENV_DISABLE_PROMPT 1
set -x MANPAGER "sh -c 'col -bx | bat -l man -p'"
set -x EDITOR nano
set -x MICRO_TRUECOLOR 1

{{ if eq .osid "android" }}
if not pgrep -f "crond" >/dev/null
    crond
end

if not pgrep -f "sshd" >/dev/null
    sshd
end
{{ end }}


if test $TERM = linux
    if type -q yaft
        set -x FRAMEBUFFER /dev/fb0
        # set -x YAFT wall
        yaft
    end
end

## Export variable need for qt-theme
if type -q qtile
    set -x QT_QPA_PLATFORMTHEME qt5ct
end

if not functions -q fisher; and status is-interactive
    curl -sL https://git.io/fisher | source
    if grep -q fisher ~/.config/fish/fish_plugins
        fisher update
    else
        fisher install jorgebucaran/fisher
        fisher install franciscolourenco/done
        fisher install edc/bass
        fisher install Kristoffer-PBS/autols-fish
    end
    if type -q autols-toggle
        autols-toggle on &>/dev/null
    end
end

# Set settings for https://github.com/franciscolourenco/done
set -U __done_min_cmd_duration 10000
set -U __done_notification_urgency_level low


## Environment setup
# Apply .profile: use this to put fish compatible .profile stuff in
if test -f ~/.fish_profile
    source ~/.fish_profile
end

if test -f ~/.aliases
    source ~/.aliases
end

# Add ~/.local/bin to PATH
if test -d ~/.local/bin
    if not contains -- ~/.local/bin $PATH
        set -p PATH ~/.local/bin
    end
end

# Add depot_tools to PATH
if test -d ~/Applications/depot_tools
    if not contains -- ~/Applications/depot_tools $PATH
        set -p PATH ~/Applications/depot_tools
    end
end

## Advanced command-not-found hook
if test -f /usr/share/doc/find-the-command/ftc.fish
    source /usr/share/doc/find-the-command/ftc.fish
end

## Functions
function fish_user_key_bindings
    # ctrl-del
    bind \e\[3\;5~ kill-word

    # ctrl-] (backspace)
    bind \cH backward-kill-word

    # ctrl-u
    bind \cu kill-whole-line
end

# Functions needed for !! and !$ https://github.com/oh-my-fish/plugin-bang-bang
function __history_previous_command
    switch (commandline -t)
        case "!"
            commandline -t $history[1]
            commandline -f repaint
        case "*"
            commandline -i !
    end
end

function __history_previous_command_arguments
    switch (commandline -t)
        case "!"
            commandline -t ""
            commandline -f history-token-search-backward
        case "*"
            commandline -i '$'
    end
end

if [ "$fish_key_bindings" = fish_vi_key_bindings ]
    bind -Minsert ! __history_previous_command
    bind -Minsert '$' __history_previous_command_arguments
else
    bind ! __history_previous_command
    bind '$' __history_previous_command_arguments
end

# Fish command history
function history
    builtin history --show-time='%F %T '
end

function backup --argument filename
    cp $filename $filename.bak
end

# Copy DIR1 DIR2
function copy
    set count (count $argv | tr -d \n)
    if test "$count" = 2; and test -d "$argv[1]"
        set from (echo $argv[1] | trim-right /)
        set to (echo $argv[2])
        command cp -r $from $to
    else
        command cp $argv
    end
end

{{ template "shell/colors.fish" . }}

## Run fastfetch if session is interactive
if status --is-interactive
    if type -q fastfetch
        fastfetch --load-config neofetch
    else if type -q neofetch
        neofetch
    end
end

if type -q code
    set -x EDITOR "code --wait"
end

## Starship prompt
if type -q starship
    starship init fish | source
end
