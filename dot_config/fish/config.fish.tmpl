## Set values
# Hide welcome message
set fish_greeting
set -x PAGER "bat --plain"
set -x MANPAGER "sh -c 'col -bx | bat -l man -p'"
set -x MANROFFOPT -c
set -x MICRO_TRUECOLOR 1
not contains qmark-noglob $fish_features && set -Ua fish_features qmark-noglob
set -x WINIT_X11_SCALE_FACTOR 1
set -x npm_config_prefix "$HOME/.local"
set -x BAT_STYLE 'numbers,changes,grid,header-filename,header-filesize'
set -x BAT_THEME 'Catppuccin Mocha'
set -x RIPGREP_CONFIG_PATH ~/.ripgreprc
set -x CRYPTOGRAPHY_OPENSSL_NO_LEGACY 1
set -x GEM_HOME ~/.local/share/gems

# nnn
set -l BLK 03
set -l CHR 03
set -l DIR 04
set -l EXE 02
set -l REG 07
set -l HARDLINK 05
set -l SYMLINK 05
set -l MISSING 08
set -l ORPHAN 01
set -l FIFO 06
set -l SOCK 03
set -l UNKNOWN 01
set -x NNN_COLORS "#04020301;4231"
set -x NNN_FCOLORS "$BLK$CHR$DIR$EXE$REG$HARDLINK$SYMLINK$MISSING$ORPHAN$FIFO$SOCK$UNKNOWN"
set -x NNN_PLUG 'f:finder;o:fzopen;p:preview-tui;d:diffs'
set -x NNN_PREVIEWDIR "$HOME/.cache/nnn/previews"
set -x NNN_BATTHEME $BAT_THEME
set -x NNN_BATSTYLE $BAT_STYLE
set -x NNN_OPTS Hdir
set -x NNN_ARCHIVE "\\.(7z|a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|rar|rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)\$"

if set -q KITTY_WINDOW_ID && type -q kitten && [ "$TERM" = xterm-kitty ]
    alias ssh="kitten ssh"
end

{{ if eq .osid "android" }}
set -x USER haroldo
set -x ZK_NOTEBOOK_DIR ~/storage/shared/Documents/notes

if not pgrep -f crond >/dev/null && type -q crond
    crond
end

if not pgrep -f sshd >/dev/null && type -q sshd
    sshd
end

{{   if .installDE }}
set -x DISPLAY ":1"
{{   end }}
{{ else }}
set -x ZK_NOTEBOOK_DIR ~/Documents/notes

if not test -f ~/.cache/weather && type -q get-weather
    get-weather ~/.cache/weather &>/dev/null &
    disown
end
test -f /usr/share/xdg-desktop-portal/portals/kde.portal && set -x GTK_USE_PORTAL 1
{{ end }}

if test "$TERM" = linux
    if type -q yaft
        set -x FRAMEBUFFER /dev/fb0
        # set -x YAFT wall
        yaft
    end
end

# Set settings for https://github.com/franciscolourenco/done
set -x __done_min_cmd_duration 10000
set -x __done_notification_urgency_level low
set -x __done_notification_urgency_level_failure normal

## Environment setup
# Apply .profile: use this to put fish compatible .profile stuff in
if test -f ~/.fish_profile
    source ~/.fish_profile
end

if test -f ~/.aliases
    source ~/.aliases
end

set -l paths \
    /usr/local/texlive/bin/x86_64-linux \
    /opt/cuda/bin \
    ~/bin \
    ~/.cargo/bin \
    ~/.local/bin \
    ~/.local/bin/lastools/bin \
    ~/.cabal/bin \
    ~/.ghcup/bin \
    $GEM_HOME/bin

for path in $paths
    if test -d $path
        if not contains -- $path $PATH
            set -pgx PATH $path
        end
    end
end

## Advanced command-not-found hook
if test -f /usr/share/doc/find-the-command/ftc.fish
    source /usr/share/doc/find-the-command/ftc.fish
end

if test -f ~/.config/rclone/rclone.fish
    source ~/.config/rclone/rclone.fish
end

## Functions
# use bat to color --help messages
function h --argument cmd
    $cmd --help 2>&1 | bat --plain --language=help
end

function fish_user_key_bindings
    # ctrl-del
    bind \e\[3\;5~ kill-word

    # ctrl-] (backspace)
    bind \cH backward-kill-word

    # ctrl-q
    bind \cq kill-whole-line
end

# Functions needed for !! and !$ https://github.com/oh-my-fish/plugin-bang-bang
function __history_previous_command
    switch (commandline -t)
        case "!"
            commandline -t $history[1]
            commandline -f repaint
        case "*"
            commandline -i !
    end
end

function __history_previous_command_arguments
    switch (commandline -t)
        case "!"
            commandline -t ""
            commandline -f history-token-search-backward
        case "*"
            commandline -i '$'
    end
end

if [ "$fish_key_bindings" = fish_vi_key_bindings ]
    bind -Minsert ! __history_previous_command
    bind -Minsert '$' __history_previous_command_arguments
else
    bind ! __history_previous_command
    bind '$' __history_previous_command_arguments
end

# Fish command history
function history
    builtin history --show-time='%F %T '
end

{{ template "shell/colors.fish" . }}

{{ if .isWSL }}
if service --status-all 2>/dev/null | grep docker | grep - &>/dev/null
    sudo service docker start &>/dev/null
end
{{ end }}

## Run fastfetch if session is interactive
if status --is-interactive && test -z "$VSCODE" && begin
        test -z "$TMUX" || test $(tmux display -p '#{pane_index}') -eq 1
    end
    if type -q fastfetch
        fastfetch --config neofetch
    else if type -q neofetch
        neofetch
    else if type -q wslfetch
        wslfetch
    end
end

type -q nvim && set -x EDITOR nvim || set -x EDITOR vim

if test -f ~/.config/.env
    while read -la line
        set -x $(string split -m1 '=' "$line")
    end <~/.config/.env
end

if test -f ~/.config/.env.local
    while read -la line
        set -x $(string split -m1 '=' "$line")
    end <~/.config/.env.local
end

# conda
alias conda_source='eval /opt/miniconda3/bin/conda "shell.fish" "hook" $argv | source'

# fish theme
if test -f ~/.config/fish/themes/catppuccin.theme
    fish_config theme choose catppuccin
end

# lazygit theme
if type -q lazygit
    set -l lazygit_config_dir "$(lazygit --print-config-dir)"
    set -l lazygit_config_path "$lazygit_config_dir/config.yml"
    set -l lazygit_theme_path "$lazygit_config_dir/catppuccin.yml"
    set -x LG_CONFIG_FILE "$lazygit_config_path,$lazygit_theme_path"
end

## Mcfly history
if status --is-interactive && type -q mcfly
    mcfly init fish | source
end

## zoxide
if status --is-interactive && type -q zoxide
    zoxide init fish | source
end

# stderred
if test -f /usr/lib/libstderred.so
    set -x STDERRED_BLACKLIST '^(wine)$'
    set -x LD_PRELOAD /usr/lib/libstderred.so
end

## Starship prompt
{{- if eq .osid "windows" }}
if type -q starship
    starship init fish | source
end
{{- else }}
if status --is-interactive && type -q starship
    starship init fish | source
end
{{- end }}
