{{- if ne .osid "android" -}}
#!/bin/bash
{{- else -}}
#!/data/data/com.termux/files/usr/bin/bash
{{ end }}

set -eu

if [ -f "${HOME}/.config/.env" ]; then source "${HOME}/.config/.env"; fi

if ! [ -x "${HOME}/.local/bin/semver" ]; then
  wget --header "${WGET_GH_AUTH}" -O "${HOME}/.local/bin/semver" -q "https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver"
  chmod +x "${HOME}/.local/bin/semver"
fi

{{ if or (eq .osid "linux-ubuntu") (eq .osidLike "linux-ubuntu") (eq .osid "linux-debian") }}
case $(uname -m) in
x86_64)
  ARCH=amd64
  UARCH=x86_64
  ;;
i386 | i686)
  ARCH=i686
  UARCH=32-bit
  ;;
*)
  ARCH=
  UARCH=
  ;;
esac

TEMP_FOLDER=$(mktemp -d)
trap 'rm -rf "${TEMP_FOLDER}"' EXIT

GH_AUTH="Authorization: Bearer ${GH_TOKEN}"
WGET_GH_AUTH="Authorization: token ${GH_TOKEN}"

BAT_VER=$(curl --silent "https://api.github.com/repos/sharkdp/bat/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s bat 2>&1 | grep "Version" | grep -q "${BAT_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/bat.deb" -q "https://github.com/sharkdp/bat/releases/download/v${BAT_VER}/bat_${BAT_VER}_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/bat.deb"
  fi
fi

# HYPER_VER=$(curl --silent "https://api.github.com/repos/vercel/hyper/releases/latest" | jq -r .tag_name | tr -d v)
# if ! dpkg -s hyper 2>&1 | grep "Version" | grep -q "${HYPER_VER}"; then
#   wget -O "${TEMP_FOLDER}/hyper.deb" "https://releases.hyper.is/download/deb"
#   DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/hyper.deb"
# fi

LIBJXL_VER=$(curl --silent "https://api.github.com/repos/libjxl/libjxl/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s jxl 2>&1 | grep "Version" | grep -q "${LIBJXL_VER}"; then
  #{{   if eq .chezmoi.osRelease.id "ubuntu" }}
  URL_LINK="https://github.com/libjxl/libjxl/releases/download/v${LIBJXL_VER}/jxl-debs-amd64-ubuntu-{{ .chezmoi.osRelease.versionID }}-v${LIBJXL_VER}.tar.gz"
  #{{  else }}
  URL_LINK="https://github.com/libjxl/libjxl/releases/download/v${LIBJXL_VER}/jxl-debs-amd64-debian-{{ .chezmoi.osRelease.versionCodename }}-v${LIBJXL_VER}.tar.gz"
  #{{   end }}
  wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/libjxl.tar.gz" "${URL_LINK}"
  (
    cd "${TEMP_FOLDER}"
    tar -xzf libjxl.tar.gz
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ./*.deb

    git clone --depth 1 https://github.com/novomesk/qt-jpegxl-image-plugin
    cd qt-jpegxl-image-plugin
    ./build_libqjpegxl_dynamic.sh
    sudo make install
  )
fi

ZOXIDE_VER=$(curl --silent "https://api.github.com/repos/ajeetdsouza/zoxide/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s zoxide 2>&1 | grep "Version" | grep -q "${ZOXIDE_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/zoxide.deb" -q "https://github.com/ajeetdsouza/zoxide/releases/download/v${ZOXIDE_VER}/zoxide_${ZOXIDE_VER}_${ARCH}.deb" ||
      wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/zoxide.deb" -q "https://github.com/ajeetdsouza/zoxide/releases/download/v${ZOXIDE_VER}/zoxide_${ZOXIDE_VER}-1_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/zoxide.deb"
  fi
fi

FD_VER=$(curl --silent "https://api.github.com/repos/sharkdp/fd/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s fd 2>&1 | grep "Version" | grep -q "${FD_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/fd.deb" -q "https://github.com/sharkdp/fd/releases/download/v${FD_VER}/fd_${FD_VER}_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/fd.deb"
  fi
fi

if ! [ -d "${HOME}/.local/share/fzf" ]; then
  mkdir -p "${HOME}/.local/share"
  git clone --depth 1 https://github.com/junegunn/fzf.git "${HOME}/.local/share/fzf"
else
  (
    cd "${HOME}/.local/share/fzf"
    git pull
  )
fi
"${HOME}/.local/share/fzf/install" --xdg --no-update-rc --completion --key-bindings &>/dev/null

if ! [ -d "${HOME}/.pyenv" ]; then
  curl https://pyenv.run | bash
else
  "${HOME}/.pyenv/bin/pyenv" update || :
fi

LAZYGIT_VER=$(curl --silent "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! [ -x "/usr/local/bin/lazygit" ] || ! "/usr/local/bin/lazygit" --version | grep -q "version=${LAZYGIT_VER}"; then
  if [ -n "${UARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/lazygit.tar.gz" -q "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VER}_Linux_${UARCH}.tar.gz"
    (
      cd "${TEMP_FOLDER}"
      tar -xf lazygit.tar.gz
      sudo install lazygit /usr/local/bin
    )
  fi
fi

LAZYDOCKER_VER=$(curl --silent "https://api.github.com/repos/jesseduffield/lazydocker/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! [ -x "/usr/local/bin/lazydocker" ] || ! "/usr/local/bin/lazydocker" --version | grep "version" | grep -q "${LAZYDOCKER_VER}"; then
  if [ -n "${UARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/lazydocker.tar.gz" -q "https://github.com/jesseduffield/lazydocker/releases/latest/download/lazydocker_${LAZYDOCKER_VER}_Linux_${UARCH}.tar.gz"
    (
      cd "${TEMP_FOLDER}"
      tar -xf lazydocker.tar.gz
      sudo install lazydocker /usr/local/bin
    )
  fi
fi

LAZYNPM_VER=$(curl --silent "https://api.github.com/repos/jesseduffield/lazynpm/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! [ -x "/usr/local/bin/lazynpm" ] || ! "/usr/local/bin/lazynpm" --version | grep -q "version=${LAZYNPM_VER}"; then
  if [ -n "${UARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/lazynpm.tar.gz" -q "https://github.com/jesseduffield/lazynpm/releases/latest/download/lazynpm_${LAZYNPM_VER}_Linux_${UARCH}.tar.gz"
    (
      cd "${TEMP_FOLDER}"
      tar -xf lazynpm.tar.gz
      sudo install lazynpm /usr/local/bin
    )
  fi
fi

OBSIDIAN_VER=$(curl --silent "https://api.github.com/repos/obsidianmd/obsidian-releases/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s obsidian 2>&1 | grep "Version" | grep -q "${OBSIDIAN_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/obsidian.deb" -q "https://github.com/obsidianmd/obsidian-releases/releases/download/v${OBSIDIAN_VER}/obsidian_${OBSIDIAN_VER}_${ARCH}.deb" ||
      wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/obsidian.deb" -q "https://github.com/obsidianmd/obsidian-releases/releases/download/v${OBSIDIAN_VER}/obsidian-${OBSIDIAN_VER}-${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/obsidian.deb"
  fi
fi

KITTY_VER=$(curl --silent "https://api.github.com/repos/kovidgoyal/kitty/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! [ -x "${HOME}/.local/bin/kitty" ] || ! "${HOME}/.local/bin/kitty" --version | grep -q "${KITTY_VER}"; then
  mkdir -p "${HOME}/.local/share/applications"
  curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin launch=n dest="${HOME}/.local/share"
  cp "${HOME}/.local/share/kitty.app/share/applications/kitty.desktop" "${HOME}/.local/share/applications/"
  # sed -i "s|Icon=kitty|Icon=/home/$USER/.local/share/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" "${HOME}q"/.local/share/applications/kitty*.desktop
  sed -i "s|Exec=kitty|Exec=/home/$USER/.local/share/kitty.app/bin/kitty|g" "${HOME}"/.local/share/applications/kitty*.desktop
  ln -sf "${HOME}/.local/share/kitty.app/bin/kitty" "${HOME}/.local/bin/"
  ln -sf "${HOME}/.local/share/kitty.app/bin/kitten" "${HOME}/.local/bin/"
fi

if ! command -v vmplayer &>/dev/null; then
  wget -O "${TEMP_FOLDER}/vmware.bundle" -q --user-agent="Mozilla" --content-disposition "https://www.vmware.com/go/getplayer-linux"
  sudo bash "${TEMP_FOLDER}/vmware.bundle"
fi

RCLONE_VER=$(curl --silent "https://api.github.com/repos/rclone/rclone/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s rclone 2>&1 | grep "Version" | grep -q "${RCLONE_VER}" &&
  [ "$(semver compare $(rclone version | grep rclone | cut -d 'v' -f2) ${RCLONE_VER})" = -1 ]; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/rclone.deb" -q "https://github.com/rclone/rclone/releases/download/v${RCLONE_VER}/rclone-v${RCLONE_VER}-linux-${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/rclone.deb"
  fi
fi

DELTA_VER=$(curl --silent "https://api.github.com/repos/dandavison/delta/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s git-delta 2>&1 | grep "Version" | grep -q "${DELTA_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/delta.deb" -q "https://github.com/dandavison/delta/releases/download/${DELTA_VER}/git-delta_${DELTA_VER}_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/delta.deb"
  fi
fi

PANDOC_VER=$(curl --silent "https://api.github.com/repos/jgm/pandoc/releases/latest" --header "${GH_AUTH}" | jq -r .tag_name | tr -d v)
if ! dpkg -s pandoc 2>&1 | grep "Version" | grep -q "${PANDOC_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/pandoc.deb" -q "https://github.com/jgm/pandoc/releases/download/${PANDOC_VER}/pandoc-${PANDOC_VER}-${ARCH}.deb" || \
      wget --header "${WGET_GH_AUTH}" -O "${TEMP_FOLDER}/pandoc.deb" -q "https://github.com/jgm/pandoc/releases/download/${PANDOC_VER}/pandoc-${PANDOC_VER}-1-${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/pandoc.deb"
  fi
fi

EXIFTOOL_VER=$(curl --silent "https://api.github.com/repos/exiftool/exiftool/tags" --header "${GH_AUTH}" | jq -r '.[0].name')
if ! exiftool -ver 2>/dev/null | grep -q "${EXIFTOOL_VER}"; then
  (
    cd "${TEMP_FOLDER}"
    git clone --depth 1 --branch "${EXIFTOOL_VER}" https://github.com/exiftool/exiftool.git
    cd exiftool
    perl Makefile.PL
    make test >/dev/null
    sudo make install
  )
fi
{{ end }}
