{{- if ne .osid "android" -}}
#!/bin/bash
{{- else -}}
#!/data/data/com.termux/files/usr/bin/bash
{{ end }}

set -eu

{{ if or (eq .osid "linux-ubuntu") (eq .osidLike "linux-ubuntu") (eq .osid "linux-debian") }}
case $(uname -m) in
x86_64) ARCH=amd64; UARCH=x86_64 ;;
i386 | i686) ARCH=i686; UARCH=32-bit ;;
*) ARCH=; UARCH= ;;
esac

TEMP_FOLDER=$(mktemp -d)
trap 'rm -rf "${TEMP_FOLDER}"' EXIT

BAT_VER=$(curl --silent "https://api.github.com/repos/sharkdp/bat/releases/latest" | jq -r .tag_name | tr -d v)
if ! dpkg -s bat 2>&1 | grep "Version" | grep -q "${BAT_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget -O "${TEMP_FOLDER}/bat.deb" -q "https://github.com/sharkdp/bat/releases/download/v${BAT_VER}/bat_${BAT_VER}_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/bat.deb"
  fi
fi

HYPER_VER=$(curl --silent "https://api.github.com/repos/vercel/hyper/releases/latest" | jq -r .tag_name | tr -d v)
if ! dpkg -s hyper 2>&1 | grep "Version" | grep -q "${HYPER_VER}"; then
  wget -O "${TEMP_FOLDER}/hyper.deb" "https://releases.hyper.is/download/deb"
  DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/hyper.deb"
fi

LIBJXL_VER=$(curl --silent "https://api.github.com/repos/libjxl/libjxl/releases/latest" | jq -r .tag_name | tr -d v)
if ! dpkg -s jxl 2>&1 | grep "Version" | grep -q "${LIBJXL_VER}"; then
{{   if eq .chezmoi.osRelease.id "ubuntu" }}
  URL_LINK="https://github.com/libjxl/libjxl/releases/download/v${LIBJXL_VER}/jxl-debs-amd64-ubuntu-{{ .chezmoi.osRelease.versionID }}-v${LIBJXL_VER}.tar.gz"
{{  else }}
  URL_LINK="https://github.com/libjxl/libjxl/releases/download/v${LIBJXL_VER}/jxl-debs-amd64-debian-{{ .chezmoi.osRelease.versionCodename }}-v${LIBJXL_VER}.tar.gz"
{{   end }}
  wget -O "${TEMP_FOLDER}/libjxl.tar.gz" "${URL_LINK}"
  (
    cd "${TEMP_FOLDER}"
    tar -xzf libjxl.tar.gz
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ./*.deb

    git clone --depth 1 https://github.com/novomesk/qt-jpegxl-image-plugin
    cd qt-jpegxl-image-plugin
    ./build_libqjpegxl_dynamic.sh
    sudo make install
  )
fi

ZOXIDE_VER=$(curl --silent "https://api.github.com/repos/ajeetdsouza/zoxide/releases/latest" | jq -r .tag_name | tr -d v)
if ! dpkg -s zoxide 2>&1 | grep "Version" | grep -q "${ZOXIDE_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget -O "${TEMP_FOLDER}/zoxide.deb" -q "https://github.com/ajeetdsouza/zoxide/releases/download/v${ZOXIDE_VER}/zoxide_${ZOXIDE_VER}_${ARCH}.deb" ||
      wget -O "${TEMP_FOLDER}/zoxide.deb" -q "https://github.com/ajeetdsouza/zoxide/releases/download/v${ZOXIDE_VER}/zoxide_${ZOXIDE_VER}-1_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/zoxide.deb"
  fi
fi

FD_VER=$(curl --silent "https://api.github.com/repos/sharkdp/fd/releases/latest" | jq -r .tag_name | tr -d v)
if ! dpkg -s fd 2>&1 | grep "Version" | grep -q "${FD_VER}"; then
  if [ -n "${ARCH}" ]; then
    wget -O "${TEMP_FOLDER}/fd.deb" -q "https://github.com/sharkdp/fd/releases/download/v${FD_VER}/fd_${FD_VER}_${ARCH}.deb"
    DEBIAN_FRONTEND=noninteractive sudo apt-get install -y "${TEMP_FOLDER}/fd.deb"
  fi
fi

if ! [ -d "${HOME}/.local/share/fzf" ]; then
  mkdir -p "${HOME}/.local/share"
  git clone --depth 1 https://github.com/junegunn/fzf.git "${HOME}/.local/share/fzf"
else
  (
    cd "${HOME}/.local/share/fzf"
    git pull
  )
fi
"${HOME}/.local/share/fzf/install" --xdg --no-update-rc --completion --key-bindings &>/dev/null

if ! [ -d "${HOME}/.pyenv" ]; then
  curl https://pyenv.run | bash
else
  "${HOME}/.pyenv/bin/pyenv" update
fi

LAZYGIT_VER=$(curl --silent "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | jq -r .tag_name | tr -d v)
if ! [ -x "/usr/local/bin/lazygit" ] || ! "/usr/local/bin/lazygit" --version | grep -q "version=${LAZYGIT_VER}"; then
  if [ -n "${UARCH}" ]; then
    wget -O "${TEMP_FOLDER}/lazygit.tar.gz" -q "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VER}_Linux_${UARCH}.tar.gz"
    (
      cd "${TEMP_FOLDER}"
      tar -xf lazygit.tar.gz
      sudo install lazygit /usr/local/bin
    )
  fi
fi
{{ end }}
