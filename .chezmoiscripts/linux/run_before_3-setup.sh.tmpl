{{- if ne .osid "android" -}}
#!/bin/bash
{{- else -}}
#!/data/data/com.termux/files/usr/bin/bash
{{ end }}

set -eu

{{ if and (ne .osid "android") (not .isWSL) }}
{{   if ne .chezmoi.osRelease.id "archarm" }}
TEMP_FOLDER=$(mktemp -d)
trap 'rm -rf "${TEMP_FOLDER}"' EXIT

# pc speaker
if command -v lsmod &>/dev/null; then
  if command -v rmmod &>/dev/null; then
    if lsmod | grep pcspkr &>/dev/null; then
      sudo rmmod pcspkr
    fi
    if lsmod | grep snd_pcsp &>/dev/null; then
      sudo rmmod snd_pcsp
    fi
  fi
fi

sudo bash -c "cat >/etc/modprobe.d/nobeep.conf" <<EOF
blacklist pcspkr
blacklist snd_pcsp
EOF

# memory
# TOTAL_MEM=$(grep MemTotal /proc/meminfo | LC_ALL=C awk '{print $2/1024^2}')
# if [ $(echo "$TOTAL_MEM>15" | bc) -eq 1 ]; then
if ! grep -q "vm.swappiness = 180" /etc/sysctl.conf; then
  sudo bash -c "cat >/etc/sysctl.conf" <<EOF
vm.swappiness = 180
vm.watermark_boost_factor = 0
vm.watermark_scale_factor = 125
vm.page-cluster = 0
EOF
fi

{{    if or (eq .osid "linux-ubuntu") (eq .osidLike "linux-ubuntu") (eq .osid "linux-debian") }}
if ! grep "16 * 1024 * 1024 * 1024" /usr/bin/init-zram-swapping &>/dev/null; then
  sudo bash -c "cat >/usr/bin/init-zram-swapping" <<'EOF'
#!/bin/sh

modprobe zram

# Calculate memory to use for zram
totalmem=$(LC_ALL=C free | grep -e "^Mem:" | sed -e 's/^Mem: *//' -e 's/  *.*//')
mem=$((totalmem * 1024))

# Calculate max memory to 16GB
mem=$((mem < 16 * 1024 * 1024 * 1024 ? mem : 16 * 1024 * 1024 * 1024))

# initialize the devices
echo zstd > /sys/block/zram0/comp_algorithm
echo $mem > /sys/block/zram0/disksize
mkswap /dev/zram0
swapon -p 5 /dev/zram0
EOF
fi
{{    else }}
if ! grep "zram-size = min(ram, 16384)" /etc/systemd/zram-generator.conf &>/dev/null; then
  sudo bash -c "cat >/etc/systemd/zram-generator.conf" <<EOF
[zram0]
zram-size = min(ram, 16384)
compression-algorithm = zstd
host-memory-limit = none
EOF
fi
{{    end }}

if [ -f /swap.img ]; then
  sudo sed -i "s_^/swap.img_#/swap.img_" /etc/fstab
  sudo swapoff /swap.img
  sudo rm -f /swap.img
fi

# sddm
if ! [ -f /etc/sddm.conf ]; then
  sudo touch /etc/sddm.conf
fi

if command -v crudini &>/dev/null; then
  sudo crudini --set /etc/sddm.conf General Numlock on
  sudo crudini --set /etc/sddm.conf General InputMethod ""
fi

if ! [ -f /usr/share/alsa-card-profile/mixer/paths/analog-output-fixed.conf ] && [ -f /usr/share/alsa-card-profile/mixer/profile-sets/default.conf ]; then
  sudo bash -c "cat >/usr/share/alsa-card-profile/mixer/paths/analog-output-fixed.conf" <<EOF
[Element PCM]
switch = mute
volume = ignore
volume-limit = 0.01
override-map.1 = all
override-map.2 = all-left,all-right
EOF

  sudo cp /usr/share/alsa-card-profile/mixer/profile-sets/default.conf /usr/share/alsa-card-profile/mixer/profile-sets/profile-for-bad-soundcards.conf

  if command -v crudini &>/dev/null; then
    sudo crudini --set /usr/share/alsa-card-profile/mixer/profile-sets/profile-for-bad-soundcards.conf "Mapping analog-stereo" "paths-output" "analog-output-fixed"
  fi
fi

if ! grep -q 'ENV{UDISKS_FILESYSTEM_SHARED}="1"' /etc/udev/rules.d/99-udisks2.rules; then
  sudo bash -c "cat >/etc/udev/rules.d/99-udisks2.rules" <<EOF
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"
EOF
fi

if ! [ -f /etc/tmpfiles.d/media.conf ]; then
  sudo bash -c "cat >/etc/tmpfiles.d/media.conf" <<EOF
D /media 0755 root root 0 -
EOF
fi

if command -v crudini &>/dev/null; then
  sudo crudini --set /etc/udisks2/mount_options.conf "defaults" btrfs_defaults "compress-force=zstd"
  sudo crudini --set /etc/udisks2/mount_options.conf "/dev/disk/by-label/data" btrfs_defaults "compress-force=zstd:15"
  sudo crudini --set /etc/udisks2/mount_options.conf "/dev/disk/by-label/data2" btrfs_defaults "compress-force=zstd:15"
  sudo crudini --set /etc/udisks2/mount_options.conf "/dev/disk/by-label/data3" btrfs_defaults "compress-force=zstd:15"
  sudo crudini --set /etc/udisks2/mount_options.conf "/dev/disk/by-label/backup-linux" btrfs_defaults "compress-force=zstd:15"
  sudo crudini --set /etc/udisks2/mount_options.conf "/dev/disk/by-label/backup-windows" btrfs_defaults "compress-force=zstd:15"
fi

if command -v sensors-detect &>/dev/null && grep -qi 'amd' /proc/cpuinfo && ! [ -f "/etc/modprobe.d/it87.conf" ]; then
  if ! [ -d "/var/lib/dkms/it87" ]; then
    git -C "${TEMP_FOLDER}" clone --depth 1 https://github.com/frankcrawford/it87.git
    (
      cd "${TEMP_FOLDER}/it87"
      sudo make dkms
    )
  fi
  sudo modprobe it87 ignore_resource_conflict=1
  sudo sensors-detect --auto &>/dev/null
  sudo bash -c "echo 'options it87 mmio=1' >/etc/modprobe.d/it87.conf"
  sudo bash -c "echo 'it87' >/etc/modules-load.d/it87.conf"
fi

if ! [ -f /usr/lib/libstderred.so ]; then
  git -C "${TEMP_FOLDER}" clone --depth 1 https://github.com/ku1ik/stderred.git
  (
    cd "${TEMP_FOLDER}/stderred"
    mkdir -p build
    cd build
    cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=/usr -DLIBDIR=lib ../src
    make
    sudo make install
  )
fi

if [ -f /etc/apt/apt.conf.d/20apt-esm-hook.conf ]; then
  sudo rm /etc/apt/apt.conf.d/20apt-esm-hook.conf
fi

if ! [ -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf.bak ] && [ -f /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf ]; then
  sudo mv /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf.bak
  sudo touch /usr/lib/NetworkManager/conf.d/10-globally-managed-devices.conf
  sudo systemctl restart NetworkManager
fi
if [ -f /usr/share/doc/gtk3-nocsd/etc/xinit/xinitrc.d/30-gtk3-nocsd.sh ] && ! [ -f /etc/X11/xinit/xinitrc.d/30-gtk3-nocsd.sh ]; then
  sudo cp /usr/share/doc/gtk3-nocsd/etc/xinit/xinitrc.d/30-gtk3-nocsd.sh /etc/X11/xinit/xinitrc.d/
fi

if ! [ -f /etc/udev/rules.d/99-udisks2.rules ]; then
  sudo bash -c "cat >/etc/udev/rules.d/99-udisks2.rules" <<EOF
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"
EOF
fi

if ! [ -f /etc/tmpfiles.d/media.conf ]; then
  sudo bash -c "cat >/etc/tmpfiles.d/media.conf" <<EOF
D /media 0755 root root 0 -
EOF
fi

if command -v rclone &>/dev/null && ! [ -f "${HOME}/.config/rclone/rclone.fish" ]; then
  mkdir -p "${HOME}/.config/rclone"
  sudo rclone genautocomplete fish "${HOME}/.config/rclone/rclone.fish"
fi

if [ -f /etc/xdg/autostart/org.kde.discover.notifier.desktop ]; then
  sudo rm -f /etc/xdg/autostart/org.kde.discover.notifier.desktop
fi
{{  else if .isWSL }}
if ! [ -f "/etc/sudoers.d/service" ]; then
  echo "${USER} ALL=NOPASSWD:/usr/sbin/service" | (sudo su -c 'EDITOR="tee" visudo -f /etc/sudoers.d/service')
fi
if service --status-all 2>/dev/null | grep "docker" | grep "-" &>/dev/null; then
  sudo service docker start &>/dev/null
fi
{{  else if .isRasp }}
if grep "#enable_uart=1" /boot/cmdline.txt &>/dev/null; then
  sudo sed -i 's/#enable_uart=1/enable_uart=1/g' /boot/cmdline.txt
  grep -q 'enable_uart=1' /boot/config.txt || echo 'enable_uart=1' | sudo tee -a /boot/config.txt
  sudo systemctl stop serial-getty@ttyS0.service
  sudo systemctl disable serial-getty@ttyS0.service
  sudo sed -i 's/console=serial0,115200//g' /boot/cmdline.txt
fi

if grep "#dtparam=spi=on" /boot/cmdline.txt &>/dev/null; then
  sudo sed -i 's/blacklist spi-bcm2708/#blacklist spi-bcm2708/g' /etc/modprobe.d/raspi-blacklist.conf
  sudo sed -i 's/#dtparam=spi=on/dtparam=spi=on/g' /boot/cmdline.txt
  grep -q 'dtparam=spi=on' /boot/config.txt || echo 'dtparam=spi=on' | sudo tee -a /boot/config.txt
fi

if grep "#dtparam=i2c1=on" /boot/cmdline.txt &>/dev/null; then
  sudo sed -i 's/blacklist i2c-bcm2708/#blacklist i2c-bcm2708/g' /etc/modprobe.d/raspi-blacklist.conf
  sudo sed -i 's/#dtparam=i2c_arm=on/dtparam=i2c_arm=on/g' /boot/cmdline.txt
  sudo sed -i 's/#dtparam=i2c1=on/dtparam=i2c1=on/g' /boot/cmdline.txt
  grep -q 'dtparam=i2c_arm=on' /boot/config.txt || echo 'dtparam=i2c_arm=on' | sudo tee -a /boot/config.txt
  grep -q 'dtparam=i2c1=on' /boot/config.txt || echo 'dtparam=i2c1=on' | sudo tee -a /boot/config.txt
  grep -q 'i2c-dev' /etc/modules || echo 'i2c-dev' | sudo tee -a /etc/modules
  sudo adduser pi i2c
fi
{{  end }}
{{ end }}

if command -v fish &>/dev/null; then
  fish -c 'command -v fisher &>/dev/null && fisher update || :' &>/dev/null
fi

if command -v bat &>/dev/null;then
  bat cache --build &>/dev/null
fi
